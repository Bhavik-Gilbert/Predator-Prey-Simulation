#BlueJ class context
comment0.target=Actor
comment0.text=\n\ Defines\ what\ the\ different\ characteristics\ of\ actors\ in\ the\ simulation\ must\ have\n\n\ Determines\ it's\ state\ of\ life\ and\ location\ on\ the\ field\n\ Creates\ existence\ of\ action\ method\ for\ subclasses\ \n\n\ @author\ Bhavik\ Gilbert(K21004990)\ and\ Heman\ Seegolam(K21003628)\n\ @version\ (28/02/2022)\n
comment1.params=field\ location
comment1.target=Actor(Field,\ Location)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Actor\n\ \n\ @param\ field\ The\ field\ the\ actor\ is\ currently\ in\n\ @param\ location\ The\ actors\ location\ on\ the\ field\n
comment10.params=
comment10.target=void\ setWeatherEffects()
comment10.text=\n\ Sets\ current\ weather\ effects\ values\n\ \n
comment11.params=overlapping
comment11.target=void\ setOverlap(boolean)
comment12.params=
comment12.target=boolean\ isAlive()
comment12.text=\n\ Check\ whether\ the\ actor\ is\ alive\ or\ not.\n\ \n\ @return\ true\ if\ the\ actor\ is\ still\ alive.\n
comment13.params=
comment13.target=void\ setDead()
comment13.text=\n\ Indicate\ that\ the\ actor\ is\ no\ longer\ alive.\n\ It\ is\ removed\ from\ the\ field.\n
comment14.params=
comment14.target=Location\ getLocation()
comment14.text=\n\ Return\ the\ actor's\ location.\n\ \n\ @return\ The\ actor's\ location.\n
comment15.params=newLocation
comment15.target=void\ setLocation(Location)
comment15.text=\n\ Places\ the\ actor\ at\ the\ new\ location\ in\ the\ given\ field.\n\ \n\ @param\ newLocation\ The\ actor's\ new\ location.\n
comment16.params=
comment16.target=Field\ getField()
comment16.text=\n\ Return\ the\ actor's\ field.\n\ \n\ @return\ The\ actor's\ field.\n
comment17.params=
comment17.target=boolean\ getOverlap()
comment17.text=\n\ Return\ Whether\ the\ actor\ can\ overlap\ with\ other\ actors.\n\ \n\ @return\ Whether\ the\ actor\ can\ overlap.\n
comment2.params=newActors\ timeOfDay\ weather
comment2.target=void\ act(java.util.List,\ int,\ Weather)
comment2.text=\n\ Determines\ whether\ night\ or\ day.\n\ Replaces\ actor\ onto\ field\ if\ alive\ and\ space\ available\n\ Sets\ current\ weather\ and\ determines\ effects\n\ \n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\n\ @param\ timeOfDay\ Integer\ value\ determining\ day\ or\ night\n
comment3.params=
comment3.target=void\ replaceActor()
comment3.text=\n\ Used\ to\ place\ alive\ actors\ back\ onto\ the\ field\ at\ their\ location\ if\ their\ space\ is\ available\n
comment4.params=
comment4.target=void\ overcrowding()
comment4.text=\n\ Kills\ actors\ that\ are\ not\ on\ the\ field\ that\ must\ be\ on\ field\ to\ survive\n
comment5.params=
comment5.target=boolean\ getDay()
comment5.text=\n\ Returns\ the\ current\ time\ of\ day\ \n\ \n\ @return\ Current\ time\ of\ day,\ true\ if\ day,\ false\ if\ night\n
comment6.params=
comment6.target=boolean\ getInfected()
comment6.text=\n\ Returns\ if\ the\ actor\ is\ infected\ or\ not\n\ \n\ @return\ actor\ always\ not\ infected\n
comment7.params=newActors
comment7.target=void\ dayAct(java.util.List)
comment7.text=\n\ Plays\ out\ the\ actions\ taken\ by\ the\ actor\ during\ the\ day.\n\ \n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\n
comment8.params=newActors
comment8.target=void\ nightAct(java.util.List)
comment8.text=\n\ Plays\ out\ the\ actions\ taken\ by\ the\ actor\ during\ the\ night.\n\ \n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\n
comment9.params=
comment9.target=double\ getFoodValue()
comment9.text=\n\ Gets\ food\ value\ of\ animal\ or\ plants\n\ \n
numComments=18
