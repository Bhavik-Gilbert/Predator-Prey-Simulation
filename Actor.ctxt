#BlueJ class context
comment0.target=Actor
comment0.text=\r\n\ Defines\ what\ the\ different\ characteristics\ of\ elements\ in\ the\ simulation\ must\ have\r\n\r\n\ Determines\ it's\ state\ of\ life\ and\ location\ on\ the\ field\r\n\ Creates\ existence\ of\ action\ method\ for\ subclasses\ \r\n\r\n\ @author\ Bhavik\ Gilbert\ and\ Heman\ Seegolam\r\n\ @version\ (28/02/2022)\r\n
comment1.params=field\ location
comment1.target=Actor(Field,\ Location)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Actor\r\n\ \r\n\ @param\ field\ The\ field\ the\ actor\ is\ currently\ in\r\n\ @param\ location\ The\ actors\ location\ on\ the\ field\r\n
comment10.params=
comment10.target=void\ setWeatherEffects()
comment10.text=\r\n\ Sets\ current\ weather\ effects\ values\r\n\ \r\n
comment11.params=overlapping
comment11.target=void\ setOverlap(boolean)
comment12.params=
comment12.target=boolean\ isAlive()
comment12.text=\r\n\ Check\ whether\ the\ actor\ is\ alive\ or\ not.\r\n\ @return\ true\ if\ the\ actor\ is\ still\ alive.\r\n
comment13.params=
comment13.target=void\ setDead()
comment13.text=\r\n\ Indicate\ that\ the\ actor\ is\ no\ longer\ alive.\r\n\ It\ is\ removed\ from\ the\ field.\r\n
comment14.params=
comment14.target=Location\ getLocation()
comment14.text=\r\n\ Return\ the\ actor's\ location.\r\n\ @return\ The\ actor's\ location.\r\n
comment15.params=newLocation
comment15.target=void\ setLocation(Location)
comment15.text=\r\n\ Place\ the\ actor\ at\ the\ new\ location\ in\ the\ given\ field.\r\n\ @param\ newLocation\ The\ actor's\ new\ location.\r\n
comment16.params=
comment16.target=Field\ getField()
comment16.text=\r\n\ Return\ the\ actor's\ field.\r\n\ @return\ The\ actor's\ field.\r\n
comment17.params=
comment17.target=boolean\ getOverlap()
comment17.text=\r\n\ Return\ Whether\ the\ actor\ can\ overlap\ with\ other\ actors.\r\n\ @return\ Whether\ the\ actor\ can\ overlap.\r\n
comment2.params=newActors\ timeOfDay\ weather
comment2.target=void\ act(java.util.List,\ int,\ Weather)
comment2.text=\r\n\ Determines\ whether\ night\ or\ day.\r\n\ Replaces\ actor\ onto\ field\ if\ alive\ and\ space\ available\r\n\ Sets\ current\ weather\ and\ determines\ effects\r\n\ \r\n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\r\n\ @param\ timeOfDay\ Integer\ value\ determining\ day\ or\ night\r\n
comment3.params=
comment3.target=void\ replaceActor()
comment3.text=\r\n\ Used\ to\ place\ alive\ actors,\r\n\ back\ onto\ the\ board\ at\ their\ location\ if\ their\ space\ is\ available\r\n
comment4.params=
comment4.target=void\ overcrowding()
comment4.text=\r\n\ Kills\ animals\ on\ board\ that\ must\ be\ on\ board\ to\ live\r\n
comment5.params=
comment5.target=boolean\ getDay()
comment5.text=\r\n\ Returns\ the\ current\ time\ of\ day\ \r\n\ @return\ Current\ time\ of\ day,\ true\ if\ day,\ false\ if\ night\r\n
comment6.params=
comment6.target=boolean\ getInfected()
comment6.text=\r\n\ Returns\ if\ the\ actor\ is\ infected\ or\ not\r\n\ @return\ actor\ always\ not\ infected\r\n
comment7.params=newActors
comment7.target=void\ dayAct(java.util.List)
comment7.text=\r\n\ Plays\ out\ the\ actions\ taken\ by\ the\ actor\ during\ the\ day.\r\n\ \r\n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\r\n
comment8.params=newActors
comment8.target=void\ nightAct(java.util.List)
comment8.text=\r\n\ Plays\ out\ the\ actions\ taken\ by\ the\ actor\ during\ the\ night.\r\n\ \r\n\ @param\ newActors\ A\ list\ to\ return\ newly\ born\ actors.\r\n
comment9.params=
comment9.target=double\ getFoodValue()
comment9.text=\r\n\ Gets\ food\ value\ of\ animal\ or\ plants\r\n\ \r\n
numComments=18
